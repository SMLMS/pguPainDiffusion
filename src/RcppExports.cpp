// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// simulate_system
arma::cube simulate_system(arma::cube compartments, double q, double ec50, double n, double kin, double diff_coeff, double tau, double omega, double t, double inc);
RcppExport SEXP _pguPainDiffusion_simulate_system(SEXP compartmentsSEXP, SEXP qSEXP, SEXP ec50SEXP, SEXP nSEXP, SEXP kinSEXP, SEXP diff_coeffSEXP, SEXP tauSEXP, SEXP omegaSEXP, SEXP tSEXP, SEXP incSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type compartments(compartmentsSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type ec50(ec50SEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type kin(kinSEXP);
    Rcpp::traits::input_parameter< double >::type diff_coeff(diff_coeffSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type inc(incSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_system(compartments, q, ec50, n, kin, diff_coeff, tau, omega, t, inc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pguPainDiffusion_simulate_system", (DL_FUNC) &_pguPainDiffusion_simulate_system, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_pguPainDiffusion(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
